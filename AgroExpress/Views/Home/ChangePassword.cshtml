@model AgroExpress.DataLayer.ViewModel.ChangePassword
@{
    ViewBag.Title = "Change password";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2 style="text-align:center">Change password</h2>
<script src="~/Scripts/jquery.min.js"></script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (ViewBag.success != null)
    {
        <script>
            alert('ViewBag.success'); // display string message
        </script>
    }
    <style>
        .register-box {
            margin-top: 1%;
        }
    </style>
   
    <div class="register-box">
        <div class="register-box-body">
            @Html.HiddenFor(model => model.LoginUserID)
            <div class="form-group has-feedback">
                <label>User Name</label>
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "User name" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group has-feedback">
                <label>Previous Password</label>
                @Html.EditorFor(model => model.PrevPassword, new { htmlAttributes = new { @class = "form-control", Placeholder = "Previous Password" } })
                @Html.ValidationMessageFor(model => model.PrevPassword, "", new { @class = "text-danger" })
            </div>

            <div class="form-group has-feedback">
                <label>New Password</label>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", Placeholder = "New Password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group has-feedback">
                <label>Confirm Password</label>
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", Placeholder = "Confirm Password" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
            <div class="row">
                <div class="col-xs-8">
                </div>
                <!-- /.col -->
                <div class="col-xs-4">
                    <button type="submit" class="btn btn-primary btn-block btn-flat">Update</button>
                </div>
                <!-- /.col -->
            </div>
        </div>
        <!-- /.form-box -->
    </div>
    <!-- /.form-box -->
}
